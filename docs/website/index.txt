HsSqlPpp
========

A parser, pretty printer and type checker for SQL select statements
written in Haskell. Supports PostgreSQL SQL. BSD licensed.

*This documentation is currently for the unreleased development
version, to be 0.3.0, which isn't on HackageDB. You can download it
using:*

~~~~~{.sh}
bzr branch lp:~jakewheat/hssqlppp/trunk
~~~~~

*None of the cabal commands anywhere in this documentation will be
 correct until 0.3.0 is uploaded to hackage.*

This documentation is a work in progress.

Use
===

Possible uses of this library include:

* parsing sql as part of another library
* lint checking sql code
* generating sql code from scratch
* helping with typesafe database access from haskell

Status
======

Pre-alpha. Current focus is on supporting SQL select statements
(particularly analytic queries) with high quality type checking.

Installation
============

This project is currently developed on GHC 6.12.1.

There are cabal flags:

* binaries: to compile the tests, and development support binaries -
  these bring in a massive amount of dependencies

Use

~~~~~{.sh}
cabal install hssqlppp
~~~~~

to install the library, or

~~~~~{.sh}
cabal install hssqlppp -fbinaries
~~~~~

for the binaries. The binaries are:

* [Tests](source/tests/Tests.lhs.html) - the automated test suite

* [ReadCatalog] reads catalog information from a postgresql database
  and converts to haskell source to use in type checking.

You can compile and run the binaries without installing in your path
using something like:

~~~~~{.sh}
cabal unpack hssqlppp
cd hssqlppp-0.3.0
cabal configure -fbinaries
cabal build
~~~~~

Documentation
=============

* [Haddock](haddock/index.html)

* [Examples](examples.html)

The [test extracts](test_extracts/index.html) are a list of parsing,
type checking, and canonicalisation examples autogenerated from the
tests - can use to get a quick idea of the coverage of SQL and
capabilities of the type checker, for instance.

See the [htmlized source for the library, tests, and
examples](source.txt.html); has lots of comments but is quite rough at
the moment.

Homepage: [http://community.haskell.org/%7EJakeWheat/hssqlppp/index.html](http://community.haskell.org/%7EJakeWheat/hssqlppp/index.html)

Hackage: [http://hackage.haskell.org/package/hssqlppp](http://hackage.haskell.org/package/hssqlppp)

Repository: [http://launchpad.net/hssqlppp](http://launchpad.net/hssqlppp)

Future Plans
============

A previous version had a lot of support for parsing and typechecking
dml, ddl and pl/pgsql, typechecking parameterized statements, plus
some work on code to write custom sql syntax extensions and
quasi-quoting. These have been removed temporarily to focus on getting
the parsing and typechecking of sql queries robust enough to use in
production software.

These removed features should return at some point, probably
parameterized select statements first, then dml, then ddl, then
extension work.

Contact
=======

Let me know if you're using/ interested in using the library, if you
have any problems, bug reports, or suggestions, etc.. All
contributions, comments and criticism welcome:

jakewheatmail@gmail.com
